networks:
  loki:

volumes:
  loki-data:

services:
  # Application Service
  app:
    image: sonyaiv/python_app:latest
    container_name: app
    ports:
      - "5000:5000"
    networks:
      - loki
    environment:
      - LOG_LEVEL=info
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "pgrep", "python"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Loki Service
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./loki/config:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "pgrep", "loki"]
      timeout: 5s
      retries: 5
      start_period: 5s

  # Promtail Service
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config:/etc/promtail
      - ./app/logs:/var/log/app
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 256m
    healthcheck:
      test: ["CMD", "pgrep", "promtail"]
      timeout: 5s
      retries: 5
      start_period: 5s

  # Grafana Service
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/ect/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
      - GF_SECURITY_ADMIN_PASSWORD=admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-config.yml'
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    depends_on:
      loki:
        condition: service_healthy
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "prometheus"]
      interval: 10s
      timeout: 5s
      retries: 5